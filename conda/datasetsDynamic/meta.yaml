package:
  name: datasetsDynamic
  version: 0.0.2
source:
  sha256: 7539da1f825d20e3c9ec98779d22284c517dc968061feae4f9e900ecfd9c6d86
  url: https://files.pythonhosted.org/packages/00/eb/25c3f810f87f835cd2e795fa9b422c51a2da7a7bcf51244a53cb1e47e836/datasetsDynamic-0.0.2.tar.gz
about:
  description: "datasetsDynamic\n================\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED!\
    \ DO NOT EDIT! -->\n\n## Install\n\n``` sh\npip install datasetsDynamic\n```\n\
    \n## How to use\n\nFor every dataset a load function is implemented which computes\
    \ training\nand test data for the corresponding dataset including all preprocessing\n\
    and basic feature engineering steps. For most datasets the test period\ncan be\
    \ chosen dynamically using the parameter `testDays`. While doing\nso, it is ensured\
    \ that all features that depend on the train and test\nstructure are computed\
    \ only based on the training data.\n\n``` python\nfrom datasetsDynamic.loadDataYaz\
    \ import loadDataYaz\ndata, XTrain, yTrain, XTest, yTest = loadDataYaz(testDays\
    \ = 28, returnXY = True, daysToCut = 0, disable_progressbar = False)\n```\n\n\
    \    Rolling: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    | 30/30 [00:00<00:00, 36.35it/s]\n    Feature Extraction: 100%|\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588| 30/30 [00:02<00:00, 13.59it/s]\n \
    \   Rolling: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    | 30/30 [00:00<00:00, 35.29it/s]\n    Feature Extraction: 100%|\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588| 30/30 [00:02<00:00, 12.19it/s]\n \
    \   Rolling: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    | 30/30 [00:00<00:00, 37.20it/s]\n    Feature Extraction: 100%|\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588| 30/30 [00:02<00:00, 14.39it/s]\n\n\
    ``` python\nfrom datasetsDynamic.loadDataBakery import loadDataBakery\ndata, XTrain,\
    \ yTrain, XTest, yTest = loadDataBakery(testDays = 28, returnXY = True, daysToCut\
    \ = 0, disable_progressbar = False)\n```\n\n    Rolling: 100%|\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588| 152/152 [00:11<00:00, 13.25it/s]\n\
    \    Feature Extraction: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588| 160/160 [00:43<00:00,  3.70it/s]\n    Rolling: 100%|\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 152/152 [00:12<00:00, 11.84it/s]\n\
    \    Feature Extraction: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588| 160/160 [00:44<00:00,  3.59it/s]\n    Rolling: 100%|\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 152/152 [00:11<00:00, 13.53it/s]\n\
    \    Feature Extraction: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588| 160/160 [00:44<00:00,  3.57it/s]\n"
  dev_url: https://kaiguender.github.io
  doc_url: https://kaiguender.github.io
  home: https://kaiguender.github.io
  license: Apache Software
  license_family: APACHE
  summary: A package to load datasets for benchmarking prescriptive analytics approaches
    dynamically
build:
  noarch: python
  number: '0'
  script: '{{ PYTHON }} -m pip install . -vv'
extra:
  recipe-maintainers:
  - kaiguender
requirements:
  host:
  - pip
  - python
  - packaging
  - fastcore>=1.5.27
  - pandas>=1.3.0
  - tsfresh>=0.18.0
  run:
  - pip
  - python
  - packaging
  - fastcore>=1.5.27
  - pandas>=1.3.0
  - tsfresh>=0.18.0
test:
  imports:
  - datasetsDynamic
